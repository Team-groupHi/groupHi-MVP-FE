name: Create Branch from Issue

on:
  issues:
    types:
      - opened

jobs:
  create-branch:
    name: Create Branch from Issue
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Ensure Issue is Added to @grouphi Project
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ORGANIZATION="grouphi"  # @ 제외
          PROJECT_NUMBER="1"  # 프로젝트 번호 (이 값이 확실하므로 조회 생략)
          REPO_NAME="${{ github.repository }}"
          ISSUE_ID=$(gh issue view ${{ github.event.issue.number }} --repo $REPO_NAME --json id --jq '.id')

          echo "🔍 이슈가 프로젝트에 속해 있는지 확인..."
          PROJECT_ISSUES=$(gh project item-list $PROJECT_NUMBER --owner $ORGANIZATION --format json | jq -r '.[].content.id')

          if echo "$PROJECT_ISSUES" | grep -q "$ISSUE_ID"; then
            echo "✅ 이슈가 이미 @grouphi 조직 프로젝트에 추가됨. 추가 작업 불필요."
            echo "PROJECT_ALREADY_EXISTS=true" >> $GITHUB_ENV  # 환경 변수 설정
          else
            echo "🔄 이슈를 @grouphi 조직 프로젝트에 추가 중..."
            gh project item-add $PROJECT_NUMBER --owner $ORGANIZATION --url "https://github.com/$REPO_NAME/issues/${{ github.event.issue.number }}"
            echo "✅ 이슈가 @grouphi 조직 프로젝트에 추가됨."
            echo "PROJECT_ALREADY_EXISTS=false" >> $GITHUB_ENV  # 환경 변수 설정
          fi

      - name: Issue Parser
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Log Issue Parser
        run: |
          echo 'Parsed Branch Name: ${{ steps.issue-parser.outputs.issueparser_branch }}'
          echo 'Parsed Issue Title: ${{ github.event.issue.title }}'
          echo 'Full Parsed JSON: ${{ steps.issue-parser.outputs.jsonString }}'

      - name: Checkout Dev Code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Create Branch from Issue
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"  # 깃허브 이슈 번호
          ISSUE_TITLE="${{ steps.issue-parser.outputs.issueparser_branch }}" # 브랜치명 필드에서 값 추출

          if [[ -z "$ISSUE_TITLE" ]]; then
            echo "❌ 브랜치명을 찾을 수 없습니다. 워크플로우를 종료합니다."
            exit 1
          fi

          BRANCH_NAME="GRPHI-${ISSUE_NUMBER}-feat/$(echo ${ISSUE_TITLE} | sed 's/ /-/g')"
          echo "Creating Branch: $BRANCH_NAME"

          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"

      - name: Update Issue Title with Branch Name
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[GRPHI-${{ github.event.issue.number }}] ${{ github.event.issue.title }}'

      - name: Add Comment with Branch Info
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: 'Branch Created: `GRPHI-${{ github.event.issue.number }}-feat/${{ steps.issue-parser.outputs.issueparser_branch }}`'
